import{_ as pt}from"../chunks/preload-helper.41c905a7.js";import{S as _t,i as bt,s as gt,e as dt,b as mt,d as J,f as wt,g as Q,h as c,D as vt,o as St,v as yt,k as h,q as E,a as M,l as f,m,r as k,c as O,n as W,C as e,J as q,I as V,L as Et,y as kt,z as Tt,A as xt,B as Ct}from"../chunks/index.e800dc39.js";import{b as Mt,m as ht,g as Ot,t as ft}from"../chunks/stores.ffc63881.js";import{W as Pt}from"../chunks/ArrowUp.svelte_svelte_type_style_lang.33208448.js";const zt=!1,Ut=Object.freeze(Object.defineProperty({__proto__:null,ssr:zt},Symbol.toStringTag,{value:"Module"}));function At(_){let t,o,n,p,u,s,T,r,d,g,B,v,$,i,a,l,b,D,x,F,H,P,S,I,y,L,z,Z,R,U,A,X,Y,G;return{c(){t=h("article"),o=h("h1"),n=E("Visualizing training with tfjs-vis"),p=M(),u=h("section"),s=h("h2"),T=E("Training Our Model"),r=M(),d=h("p"),g=E(`Our goal is to train a model to recognize similar digits. We have already written a tutorial
				on how to do so. So in this article we are going to focus on monitoring that training and
				also look at how well our model performs.`),B=M(),v=h("button"),$=E("Start training"),i=M(),a=h("section"),l=h("h2"),b=E("Evaluating Our Model"),D=M(),x=h("p"),F=E("Now that our model is trained we should evalute its performance. For a classification task\n				like this one we can use the `perClassAccuracy` and `confusionMatrix` functions. These are\n				demonstrated below."),H=M(),P=h("p"),S=h("button"),I=E("Show Model Summary"),y=M(),L=h("p"),z=h("button"),Z=E("Show per-class accuracy"),R=M(),U=h("p"),A=h("button"),X=E("Show confusion matrix"),this.h()},l(j){t=f(j,"ARTICLE",{});var C=m(t);o=f(C,"H1",{});var K=m(o);n=k(K,"Visualizing training with tfjs-vis"),K.forEach(c),p=O(C),u=f(C,"SECTION",{});var N=m(u);s=f(N,"H2",{});var tt=m(s);T=k(tt,"Training Our Model"),tt.forEach(c),r=O(N),d=f(N,"P",{});var et=m(d);g=k(et,`Our goal is to train a model to recognize similar digits. We have already written a tutorial
				on how to do so. So in this article we are going to focus on monitoring that training and
				also look at how well our model performs.`),et.forEach(c),B=O(N),v=f(N,"BUTTON",{id:!0});var at=m(v);$=k(at,"Start training"),at.forEach(c),N.forEach(c),i=O(C),a=f(C,"SECTION",{});var w=m(a);l=f(w,"H2",{});var ot=m(l);b=k(ot,"Evaluating Our Model"),ot.forEach(c),D=O(w),x=f(w,"P",{});var nt=m(x);F=k(nt,"Now that our model is trained we should evalute its performance. For a classification task\n				like this one we can use the `perClassAccuracy` and `confusionMatrix` functions. These are\n				demonstrated below."),nt.forEach(c),H=O(w),P=f(w,"P",{});var st=m(P);S=f(st,"BUTTON",{id:!0});var rt=m(S);I=k(rt,"Show Model Summary"),rt.forEach(c),st.forEach(c),y=O(w),L=f(w,"P",{});var it=m(L);z=f(it,"BUTTON",{id:!0});var ct=m(z);Z=k(ct,"Show per-class accuracy"),ct.forEach(c),it.forEach(c),R=O(w),U=f(w,"P",{});var lt=m(U);A=f(lt,"BUTTON",{id:!0});var ut=m(A);X=k(ut,"Show confusion matrix"),ut.forEach(c),lt.forEach(c),w.forEach(c),C.forEach(c),this.h()},h(){W(v,"id","start-training"),W(S,"id","show-model-summary"),W(z,"id","show-per-class-accuracy"),W(A,"id","show-confusion")},m(j,C){mt(j,t,C),e(t,o),e(o,n),e(t,p),e(t,u),e(u,s),e(s,T),e(u,r),e(u,d),e(d,g),e(u,B),e(u,v),e(v,$),e(t,i),e(t,a),e(a,l),e(l,b),e(a,D),e(a,x),e(x,F),e(a,H),e(a,P),e(P,S),e(S,I),e(a,y),e(a,L),e(L,z),e(z,Z),e(a,R),e(a,U),e(U,A),e(A,X),Y||(G=[q(v,"click",_[1]),q(S,"click",_[4]),q(z,"click",_[2]),q(A,"click",_[3])],Y=!0)},p:V,i:V,o:V,d(j){j&&c(t),Y=!1,Et(G)}}}function Dt(_){let t,o;return t=new Pt({props:{size:"100",color:"#FF3E00",unit:"px"}}),{c(){kt(t.$$.fragment)},l(n){Tt(t.$$.fragment,n)},m(n,p){xt(t,n,p),o=!0},p:V,i(n){o||(Q(t.$$.fragment,n),o=!0)},o(n){J(t.$$.fragment,n),o=!1},d(n){Ct(t,n)}}}function Nt(_){let t,o,n,p;const u=[Dt,At],s=[];function T(r,d){return r[0]?0:1}return t=T(_),o=s[t]=u[t](_),{c(){o.c(),n=dt()},l(r){o.l(r),n=dt()},m(r,d){s[t].m(r,d),mt(r,n,d),p=!0},p(r,[d]){let g=t;t=T(r),t===g?s[t].p(r,d):(yt(),J(s[g],1,1,()=>{s[g]=null}),wt(),o=s[t],o?o.p(r,d):(o=s[t]=u[t](r),o.c()),Q(o,1),o.m(n.parentNode,n))},i(r){p||(Q(o),p=!0)},o(r){J(o),p=!1},d(r){s[t].d(r),r&&c(n)}}}function Bt(_,t,o){let n;vt(_,ht,i=>o(7,n=i));let p,u=!0,s;St(async()=>{s=await pt(()=>import("../chunks/index.3e3d3536.js").then(i=>i.i),["../chunks/index.3e3d3536.js","../chunks/stores.ffc63881.js","../chunks/index.e800dc39.js","../chunks/paths.86fb6457.js"],import.meta.url),Mt.load().then(i=>{o(0,u=!1),p=i})});async function T(i,a,l){const[H,P]=ft(()=>{const y=a.nextTrainBatch(5e3);return[y.xs.reshape([5e3,784]),y.labels]}),[S,I]=ft(()=>{const y=a.nextTestBatch(1e3);return[y.xs.reshape([1e3,28*28]),y.labels]});return i.fit(H,P,{batchSize:64,validationData:[S,I],epochs:10,shuffle:!0,callbacks:l})}async function r(){ht.update(()=>Ot());const i=["loss","val_loss","acc","val_acc"],a={name:"show.fitCallbacks",tab:"Training",styles:{height:"1000px"}},l=s.show.fitCallbacks(a,i);return T(n,p,l)}const d=["Zero","Un","Deux","Trois","Quatre","Cinq","Six","Sept","Huit","Neuf"];function g(i,a=500){const l=p.nextTestBatch(a),b=l.xs.reshape([a,28*28]),D=l.labels.argMax([-1]),x=i.predict(b).argMax([-1]);return b.dispose(),[x,D]}async function B(){const[i,a]=g(n),l=await s.metrics.perClassAccuracy(a,i),b={name:"Per Class Accuracy",tab:"Evaluation"};s.show.perClassAccuracy(b,l,d),a.dispose()}async function v(){const[i,a]=g(n),l=await s.metrics.confusionMatrix(a,i),b={name:"Confusion Matrix",tab:"Evaluation"};s.render.confusionMatrix(b,{values:l,tickLabels:d}),a.dispose()}async function $(){const i={name:"Model Summary",tab:"Model Inspection"};s.show.modelSummary(i,n)}return[u,r,B,v,$]}class jt extends _t{constructor(t){super(),bt(this,t,Bt,Nt,gt,{})}}export{jt as component,Ut as universal};
